services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: chainlit
      POSTGRES_PASSWORD: chainlitpassword
      POSTGRES_DB: chainlitdb
    networks:
      - traefik-network
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U chainlit -d chainlitdb" ]
      interval: 2s
      timeout: 5s
      retries: 10

  rag:
    # Build the image from the Dockerfile in the current directory
    build: .
    env_file: .env
    environment:
      DATABASE_URL: postgresql+asyncpg://chainlit:chainlitpassword@postgres:5432/chainlitdb
    container_name: rag
    command: "uv run src/rag run --host ${HOST} --port ${PORT}"
    # Host the FastAPI application on port 8000
    ports:
      - "${PORT:-8000}:${PORT:-8000}"
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - traefik-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rag.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.rag.entrypoints=websecure"
      - "traefik.http.routers.rag.tls.certresolver=myresolver"
      - "traefik.http.services.rag.loadbalancer.server.port=${PORT}"

networks:
  traefik-network:
    external: true