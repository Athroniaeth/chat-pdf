services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: chainlit
      POSTGRES_PASSWORD: chainlitpassword
      POSTGRES_DB: chainlitdb
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U chainlit -d chainlitdb" ]
      interval: 2s
      timeout: 5s
      retries: 10

  rag:
    # Build the image from the Dockerfile in the current directory
    build: .
    env_file: .env
    environment:
      DATABASE_URL: postgresql+asyncpg://chainlit:chainlitpassword@postgres:5432/chainlitdb
    container_name: rag
    command: "uv run src/rag run --host ${HOST} --port ${PORT}"
    # Host the FastAPI application on port 8000
    ports:
      - "${PORT:-8000}:${PORT:-8000}"
    depends_on:
      postgres:
        condition: service_healthy
    develop:
      # Create a `watch` configuration to update the app
      # https://docs.docker.com/compose/file-watch/#compose-watch-versus-bind-mounts
      watch:
        # Sync the working directory with the `/app` directory in the container
        - action: sync
          path: .
          target: /app
          # Exclude the project virtual environment â€” it could be for a
          # different platform in the container
          ignore:
            - .venv/

        # Rebuild the image if dependencies change by checking uv.lock
        - action: rebuild
          path: ./uv.lock
